name: Build and publish docker images to Github Container Registry

on:
  workflow_call:
    inputs:
      semver_lowercase:
        required: true
        type: string
        description: "Target version for the docker image"
      source_folder:
        required: true
        type: string
        description: "Source folder for the codes in the repository"
      package_name:
        required: true
        type: string
        description: "Package name for the docker image"
      docker_project:
        required: true
        type: string
        description: "Name of the docker project to be built"
      gh_packages_url:
        required: false
        type: string
        default: "https://nuget.pkg.github.com/ardevora/index.json"
        description: "GitHub packages Url"    
      gh_container_registry:
        required: false
        type: string
        default: "ghcr.io"
        descripton: "Github container registry"
    secrets:
      GHCR_TOKEN:
        required: true
      GHA_USERNAME:
        required: true
      GHA_TOKEN:
        required: true

jobs:
  build_job:
    name: Build the image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.gh_container_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Build and push container image to github
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ inputs.gh_container_registry }}/ardevora/${{ inputs.package_name }}:${{ inputs.semver_lowercase }}
          file: ${{ inputs.source_folder }}/${{ inputs.docker_project }}/Dockerfile
          context: ${{ inputs.source_folder }}
          build-args: |
            PACKAGES_NAME="github"
            PACKAGES_URL=${{ inputs.gh_packages_url }}
            PACKAGES_USERNAME=${{ secrets.GHA_USERNAME }}
            PACKAGES_TOKEN=${{ secrets.GHA_TOKEN }}
