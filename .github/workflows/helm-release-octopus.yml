name: Package and upload helm charts to octopus feed

on:
  workflow_call:
    inputs:
      semver_lowercase:
        required: true
        type: string
        description: "Target sem version for the chart"
      source_folder:
        required: true
        type: string
        description: "Source folder for the helm chart in the repository" 
      octopus_space:
        required: false
        type: string
        default: "default"
        description: "The octopus space to deploy to"
      octopus_overwrite_mode:
        required: false
        type: string
        default: "FailIfExists"
        description: "The octopus overwrite mode for package"
      create_release:
        required: false
        type: boolean
      octopus_project:
        required: false
        type: string
        description: "The name of the octopus project; must be supplied when creating a release"
    secrets:
      OCTOPUS_APIKEY:
        required: false
      OCTOPUS_SERVER_URL:
        required: false
      GHA_USERNAME:
        required: true
      GHA_TOKEN:
        required: true

jobs:
  package_job:
    name: Package and push helm chart to octopus feed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: azure/setup-helm@v3
        with:
          version: 'latest'
          token: ${{ secrets.GHA_TOKEN }}
        id: install

      - name: Validate helm chart
        run: |
          helm lint ${{ inputs.source_folder }} 

      - name: Package Helm chart and get resulting file name
        id: package_chart
        run: |
          PKGOUT=$(mktemp -d)
          helm package ${{ inputs.source_folder }} --version ${{ inputs.semver_lowercase }} --app-version ${{ inputs.semver_lowercase }} -d $PKGOUT
          CHART_FILE_NAME=$(ls $PKGOUT)
          echo "::set-output name=chart_file_name::$CHART_FILE_NAME"

      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
        with:
          version: latest

      - name: Push packages to octopus
        uses: OctopusDeploy/push-package-action@v1.1.1
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          packages: "${{ steps.package_chart.outputs.chart_file_name }}"
          overwrite_mode: ${{ inputs.octopus_overwrite_mode }}
          space: ${{ inputs.octopus_space }}

      - name: Create and deploy release in Octopus
        if: ${{ inputs.create_release && inputs.octopus_project != '' }}
        uses: OctopusDeploy/create-release-action@v1.1.1
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          space: ${{ inputs.octopus_space }}
          project: ${{ inputs.octopus_project }}
          release_number: ${{ inputs.semver_lowercase }}
          release_notes: ${{ github.event.head_commit.message }}
          progress: true 