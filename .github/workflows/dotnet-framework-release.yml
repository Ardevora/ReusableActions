name: Build and publish packages and trigger Octopus Deploy

on:
  workflow_call:
    inputs:
      semver:
        required: true
        type: string
        description: "Target version for the nuget packages"
      source_folder:
        required: true
        type: string
        description: "Source folder for the codes in the repository"
      solution_name:
        required: true
        type: string
        description: "Name of the solution to be built"
      gh_packages_url:
        required: false
        type: string
        default: "https://nuget.pkg.github.com/ardevora/index.json"
        description: "GitHub packages Url"
      package_name:
        required: true
        type: string
        description: "Package name"
      artifact_root:
        required: true
        type: string
        description: "Artifact root"
      format:
        required: false
        type: string
        default: 'zip'
        description: "The format to use when packing the output (zip or nupkg)"
      push_to_package_store:
        required: false
        type: boolean
      octopus_space:
        required: false
        type: string
        default: "Default"
        description: "The octopus space to deploy to"
      create_release:
        required: false
        type: boolean
      octopus_project:
        required: false
        type: string
        description: "The name of the octopus project; must be supplied when creating a release"
    secrets:
      GHA_USERNAME:
        required: true
      GHA_TOKEN:
        required: true
      OCTOPUS_APIKEY:
        required: true
      OCTOPUS_SERVER_URL:
        required: true

jobs:
  build_job:
    name: Build the solution
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ inputs.source_folder }}

    steps:
      - uses: actions/checkout@v2

      - name: Display the version
        run: |
          echo "Version: ${{ inputs.semver }}"

      - name: Install Octopus Tooling
        run: choco install octopustools -y
        shell: powershell

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: '5.x'

      - name: Restore Packages
        run: |
          nuget sources Add -Name GitHub -Source ${{ inputs.gh_packages_url }} -UserName ${{ secrets.GHA_USERNAME }} -Password ${{ secrets.GHA_TOKEN }} -StorePasswordInClearText
          nuget setapikey ${{ secrets.GHA_TOKEN }} -Source ${{ inputs.gh_packages_url }}
          nuget restore

      - name: Set version in all AssemblyInfo.cs files
        uses: secondbounce/assemblyinfo-update@v2
        with:
          version: ${{ inputs.semver }}
          
      - name: Build Solution
        run: |
           msbuild.exe ${{ inputs.solution_name }}.sln /p:platform="Any CPU" /p:configuration="Release" /p:version=${{ inputs.semver }}

      - name: Package output
        run: |
          octo pack --id=${{ inputs.package_name }} --format="${{ inputs.format }}" --version=${{ inputs.semver }} --basePath="${{ inputs.solution_name }}\bin\Release" --outFolder=${{ inputs.artifact_root }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          path: "${{ inputs.source_folder }}/${{ inputs.artifact_root }}/${{ inputs.package_name }}.${{ inputs.semver }}.${{ inputs.format }}"

      - name: Push to package store
        if: ${{ inputs.push_to_package_store }}
        run: |
          nuget push "src/artifacts/${{ inputs.package_name }}.${{ inputs.semver }}.${{ inputs.format }}" --source ${{ inputs.gh_packages_url }} --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
        with:
          version: latest

      - name: Push packages to octopus
        uses: OctopusDeploy/push-package-action@v3
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          packages: "${{ inputs.source_folder }}/${{ inputs.artifact_root }}/${{ inputs.package_name }}.${{ inputs.semver }}.${{ inputs.format }}"
          space: ${{  inputs.octopus_space }}

      - name: Create and deploy release in Octopus
        if: ${{ inputs.create_release && inputs.octopus_project != '' }}
        uses: OctopusDeploy/create-release-action@v3
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          space: ${{ inputs.octopus_space }}
          project: ${{ inputs.octopus_project }}
          release_number: ${{ inputs.semver }}
          release_notes: ${{ github.event.head_commit.message }}
          progress: true 
