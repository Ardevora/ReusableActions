name: Build and publish docker images to Azure Container Registry and trigger Octopus Deploy

on:
  workflow_call:
    inputs:
      semver:
        required: true
        type: string
        description: "Target version for the docker image"
      semver_lowercase:
        required: true
        type: string
        description: "Target version for the docker image (lowercased)"
      build_version:
        required: false
        default: 1.0.0
        type: string
        description: "Target assembly and file version of the application"
      source_folder:
        required: true
        type: string
        description: "Source folder for the codes in the repository"
      package_name:
        required: true
        type: string
        description: "Package name for the docker image"
      docker_project:
        required: true
        type: string
        description: "Name of the docker project to be built"
      gh_packages_url:
        required: false
        type: string
        default: "https://nuget.pkg.github.com/ardevora/index.json"
        description: "GitHub packages Url"
      create_release:
        required: false
        type: boolean
        description: "Create an octopus release, must specify octopus_project, and the associated secrets to access it"
      octopus_project:
        required: false
        type: string
        description: "The name of the octopus project; must be supplied when creating a release"
      octopus_space:
        required: false
        type: string
        default: "default"
        description: "The octopus space to deploy to"
    secrets:
      SS_ACR_NAME:
        required: true
      SS_ACR_USERNAME:
        required: true
      SS_ACR_PASSWORD:
        required: true
      GHA_USERNAME:
        required: true
      GHA_TOKEN:
        required: true
      OCTOPUS_APIKEY:
        required: false
      OCTOPUS_SERVER_URL:
        required: false

jobs:
  build_job:
    name: Build and push the image to ACR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: |
            platforms = [ "linux/amd64" ]

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.SS_ACR_NAME }}
          username: ${{ secrets.SS_ACR_USERNAME }}
          password: ${{ secrets.SS_ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push container image to registry - ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.SS_ACR_NAME }}/${{ inputs.package_name }}:${{ inputs.semver_lowercase }},${{ secrets.SS_ACR_NAME }}/${{ inputs.package_name }}:latest
          file: ${{ inputs.source_folder }}/${{ inputs.docker_project }}/Dockerfile
          context: ${{ inputs.source_folder }}
          build-args: |
            PACKAGES_NAME="github"
            PACKAGES_URL=${{ inputs.gh_packages_url }}
            PACKAGES_USERNAME=${{ secrets.GHA_USERNAME }}
            PACKAGES_TOKEN=${{ secrets.GHA_TOKEN }}
            VERSION=${{ inputs.build_version }}

  deploy_job:
    if: ${{ inputs.create_release && inputs.octopus_project != '' }}
    needs: build_job
    runs-on: ubuntu-latest

    steps:
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
        with:
          version: latest

      - name: Create release note file
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "release_note.txt"
          FILE_DATA: ${{ github.event.head_commit.message }}
          
      - name: Create and deploy release - Octopus Deploy
        uses: OctopusDeploy/create-release-action@v1.1.1
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          space: ${{ inputs.octopus_space }}
          project: ${{ inputs.octopus_project }}
          release_number: ${{ inputs.semver }}
          release_notes_file: "release_note.txt"
          progress: true